/* 0.4.2 */import { Expression } from '../public';
import { ComputeEngine, Numeric } from './public';
export declare function internalIs(engine: ComputeEngine, proposition: Expression): boolean | undefined;
export declare function normalizeProposition<T extends number = Numeric>(proposition: Expression<T>): [Expression<T>, boolean];
export declare function internalAssume<T extends number = Numeric>(engine: ComputeEngine<T>, proposition: Expression<T>): 'contradiction' | 'tautology' | 'ok';
export declare function forget<T extends number = Numeric>(engine: ComputeEngine<T>, arg: Expression<T>): void;
