/* 0.4.2 */import { Expression } from '../public';
import { ComputeEngine, Numeric, Rule, RuleSet } from './public';
export declare function rules<T extends number = Numeric>(ce: ComputeEngine<T>, rs: Iterable<Rule>): RuleSet;
export declare function applyRule<T extends number = Numeric>(ce: ComputeEngine<T>, [lhs, rhs, condition]: Rule<T>, expr: Expression<T>): Expression<T> | null;
/**
 * Repeatedely apply rules in the ruleset until no rules apply
 */
export declare function replace<T extends number = Numeric>(ce: ComputeEngine, rules: RuleSet, expr: Expression<T>): Expression<T> | null;
