/* 0.4.2 */export declare const ESCAPED_CHARS: Map<number, string>;
export declare const REVERSED_ESCAPED_CHARS: Map<number, number>;
export declare const HEX_DIGITS: Map<number, number>;
export declare const DIGITS: Map<number, number>;
export declare const SUPERSCRIPT_UNICODE: Map<number, string>;
export declare const SUBSCRIPT_UNICODE: Map<number, string>;
export declare const VULGAR_FRACTIONS_UNICODE: Map<number, string>;
export declare const FANCY_UNICODE: Map<number, string>;
export declare const REVERSE_FANCY_UNICODE: Map<string, number[]>;
export declare function isLinebreak(c: number): boolean;
/** Most restrictive whitespace only TAB or SPACE */
export declare function isInlineSpace(c: number): boolean;
export declare function isPatternWhitespace(c: number): boolean;
/** Everything in pattern white space, plus some other
 * characters considered whitespace */
export declare function isWhitespace(c: number): boolean;
export declare function isSyntax(c: number): boolean;
/** A 'break' character is an whitespace, operator, punctuation, bracket, etc..
 * It indicates the end of an identifier (or number).
 */
export declare function isBreak(c: number): boolean;
export declare function isIdentifierContinueProhibited(c: number): boolean;
export declare function isIdentifierStartProhibited(c: number): boolean;
export declare function isInvisible(c: number): boolean;
export declare function codePointLength(code: number): number;
